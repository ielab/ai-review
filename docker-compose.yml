x-celery-common: &celery-common
  image: ai_review_backend_image
  restart: always
  working_dir: /app/backend/src
  volumes:
    - ./backend/:/app/backend/
    - ./logs/:/app/backend/src/logs
    - ./user-corpus:/app/backend/src/user-corpus
    - /home/ubuntu/max:/app/backend/src/app_utils/max
  env_file:
    - ./backend/src/.env
  depends_on:
    redis:
      condition: service_healthy

services:
  # Nginx
  frontend:
    container_name: ai_review_frontend
    image: nginx:1.26.2
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./frontend/dist:/var/www/ai_review
      - ./nginx_conf.d/:/etc/nginx/conf.d/
      - ./certs/:/etc/ssl/certs

  # Backend
  backend:
    container_name: ai_review_backend
    image: ai_review_backend_image
    # restart: unless-stopped
    build:
      context: ./backend
      dockerfile: dockerfile
    ports:
      - 8000:8000
    volumes:
      - ./backend/:/app/backend/
      - ./logs/:/app/backend/src/logs
      - ./user-corpus:/app/backend/src/user-corpus
      # - /home/ubuntu/max:/app/backend/src/app_utils/max
    env_file:
      - ./backend/src/.env
    depends_on:
      - postgres_db
      - redis
    entrypoint: ["bash", "/app/entrypoint.sh"]

  # Database
  postgres_db:
    container_name: ai_review_db
    image: postgres:13.16
    restart: unless-stopped
    env_file:
      - ./backend/src/.env
    volumes:
      - db_volume:/var/lib/postgresql/data
    ports:
      - 5432:5432

  # Redis
  redis:
    container_name: ai_review_redis
    image: redis:7.4.1
    restart: unless-stopped
    expose:
      - "6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  celery_worker:
    <<: *celery-common
    container_name: ai_review_celery_worker
    command:
      ["celery", "-A", "ai_review.celery_worker", "worker", "--loglevel=info"]

volumes:
  db_volume:
    name: ai_review_db_volume
